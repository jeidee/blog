<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rebar on Erlang &amp; Go</title>
    <link>https://jeidee.github.io/tags/rebar/</link>
    <description>Recent content in Rebar on Erlang &amp; Go</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Fri, 06 Nov 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jeidee.github.io/tags/rebar/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>erlang rebar의 project template을 활용한 application 뼈대 만들기</title>
      <link>https://jeidee.github.io/2015/11/06/erlang-rebarec9d98-project-templateec9d84-ed999cec9aa9ed959c-application-ebbc88eb8c80-eba78ceb93a4eab8b0/</link>
      <pubDate>Fri, 06 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://jeidee.github.io/2015/11/06/erlang-rebarec9d98-project-templateec9d84-ed999cec9aa9ed959c-application-ebbc88eb8c80-eba78ceb93a4eab8b0/</guid>
      <description>rebar project template rebar의 project template 기능을 활용해 erlang application 프로젝트를 손쉽게 생성하는 방법을 살펴보자.
Richard Jones의 포스트를 보고 rebar 실습을 따라해 보니, 현재의 erlang(17.5)과 rebar(2.6.1) 버전으로는 원활하게 진행되지 않았다.
구글링 중에 rebar의 프로젝트 템플릿을 활용하는 방법을 찾게 되었는데 몇 부분만 수정하여 문제없이 사용할 수 있었다.
해당 Repository를 Fork해서 오류부분을 수정해 보았다.
https://github.com/jeidee/rebar-project-template
사용법은 다음과 같다.
rebar 설치 우분투라면 다음과 같이 설치한다.
 $ sudo apt-get install rebar  rebar repository에서 소스를 내려 받아 빌드해서 사용해도 된다.</description>
    </item>
    
  </channel>
</rss>