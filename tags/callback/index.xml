<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Callback on Erlang &amp; Go</title>
    <link>https://jeidee.github.io/tags/callback/</link>
    <description>Recent content in Callback on Erlang &amp; Go</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Mon, 18 May 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jeidee.github.io/tags/callback/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ios c&#43;&#43; 객체에서 objective-c 객체의 함수 콜백하기</title>
      <link>https://jeidee.github.io/2015/05/18/ios-c-eab09decb2b4ec9790ec849c-objective-c-eab09decb2b4ec9d98-ed95a8ec8898-ecbd9cebb0b1ed9598eab8b0/</link>
      <pubDate>Mon, 18 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://jeidee.github.io/2015/05/18/ios-c-eab09decb2b4ec9790ec849c-objective-c-eab09decb2b4ec9d98-ed95a8ec8898-ecbd9cebb0b1ed9598eab8b0/</guid>
      <description>다음과 같은 요구사항이 있다고 가정해 보자.
 c++로 작성된 MsgClient는 통신 처리를 하는 별도의 워커쓰레드가 있다.
서버에 접속한 후 데이터를 수신하면 objective-c의 여러 ViewHandler에 데이터 수신 이벤트를 발생시켜야 한다.
이벤트 수신을 원하는 ViewHandler가 이벤트 수신을 받은 후 UI 쓰레드에서 여러 UI 컨트롤을 처리해야 한다.
 간단히 말하면 서로 다른 쓰레드에서 동작하는 c++ 오브젝트와 objective-c 오브젝트가 있고, c++ 오브젝트에서 objective-c 오브젝트의 특정 함수를 호출(콜백)할 수 있어야 한다.
위와 같은 요구사항을 처리하기 위해서 다양한 방법이 있겠지만 다음과 같은 구조를 사용해 해결해 보도록 하자.</description>
    </item>
    
    <item>
      <title>android ndk, native c/c&#43;&#43; 코드에서 java 코드 호출</title>
      <link>https://jeidee.github.io/2015/04/22/android-ndk-native-cc-ecbd94eb939cec9790ec849c-java-ecbd94eb939c-ed98b8ecb69c/</link>
      <pubDate>Wed, 22 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://jeidee.github.io/2015/04/22/android-ndk-native-cc-ecbd94eb939cec9790ec849c-java-ecbd94eb939c-ed98b8ecb69c/</guid>
      <description>다음과 같이 두 가지 측면에서 접근할 수 있다.
 동일 쓰레드에서 jni call(java코드에서 native c/c++ 함수 호출)을 하고, 동일 스코프에서 java object의 함수를 호출하는 경우 호출측(java) 쓰레드와 콜백(native c/c++) 쓰레드가 다른 경우  동일 쓰레드에서 콜백 구현 java
package com.jeidee.glooxforandroid; public TestClient { public native callbackTest(); public void testCallback(String param) { Log.d(&amp;quot;JNI&amp;quot;, param); } }  native c++
include &amp;quot;com\_jeidee\_glooxforandroid_NativeCall.h&amp;quot; #include &amp;quot;client.h&amp;quot; JNIEXPORT void JNICALL Java\_com\_jeidee\_glooxforandroid\_NativeCall_callbackTest (JNIEnv *env, jobject obj) { static jmethodID cb = NULL; jclass cls = env-&amp;gt;GetObjectClass(obj); if (cb == NULL) { cb = env-&amp;gt;GetMethodID(cls, &amp;quot;testCallback&amp;quot;, &amp;quot;(Ljava/lang/String;)V&amp;quot;); if (cb == NULL) return; } env-&amp;gt;CallVoidMethod(obj, cb, env-&amp;gt;NewStringUTF(&amp;quot;call testCallback()&amp;quot;)); }  JNI함수인 callbackTest()를 호출한 java측 object에 testCallback(String) 함수가 있을 경우 위의 코드는 정상 동작한다.</description>
    </item>
    
  </channel>
</rss>