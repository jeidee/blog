<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Regex on Erlang &amp; Go</title>
    <link>https://jeidee.github.io/tags/regex/</link>
    <description>Recent content in Regex on Erlang &amp; Go</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Tue, 14 Apr 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jeidee.github.io/tags/regex/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>c&#43;&#43; regex를 사용해서 문자열이 날짜인지 확인</title>
      <link>https://jeidee.github.io/2015/04/14/c-regexeba5bc-ec82acec9aa9ed95b4ec849c-ebacb8ec9e90ec97b4ec9db4-eb82a0eca79cec9db8eca780-ed9995ec9db8/</link>
      <pubDate>Tue, 14 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://jeidee.github.io/2015/04/14/c-regexeba5bc-ec82acec9aa9ed95b4ec849c-ebacb8ec9e90ec97b4ec9db4-eb82a0eca79cec9db8eca780-ed9995ec9db8/</guid>
      <description>정규표현식을 사용해서 주어진 문자열이 날짜인지 확인하는 코드는 다음과 같다.
#include &amp;lt;string&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;regex&amp;gt; using namespace std; bool string\_util::is\_date(string source) { // yyyy-mm-dd 형식의 날짜만 지원 regex ex(&amp;quot;d{4}-d{2}-d{2}&amp;quot;); smatch matches; while (regex_search(source, matches, ex)) { for (auto m : matches) { cout &amp;lt;&amp;lt; &amp;quot;match string is &amp;quot; &amp;lt;&amp;lt; m &amp;lt;&amp;lt; endl; } return true; } return false; }  굳이 while (regex_search(&amp;#8230;)) 루프를 사용하지 않고 if (regex_search())를 사용해도 되겠지만, 용법을 살펴보는 의미로 추가했다.</description>
    </item>
    
  </channel>
</rss>