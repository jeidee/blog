<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gpb on Erlang &amp; Go</title>
    <link>https://jeidee.github.io/tags/gpb/</link>
    <description>Recent content in Gpb on Erlang &amp; Go</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 13 Nov 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jeidee.github.io/tags/gpb/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>erlang application에서 protocol buffer 사용하기</title>
      <link>https://jeidee.github.io/2015/11/13/erlang-applicationec9790ec849c-protocol-buffer-ec82acec9aa9ed9598eab8b0/</link>
      <pubDate>Fri, 13 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://jeidee.github.io/2015/11/13/erlang-applicationec9790ec849c-protocol-buffer-ec82acec9aa9ed9598eab8b0/</guid>
      <description>이번 역시, rebar를 사용해 프로젝트를 생성했다고 가정한다.
basho의 protobuffs 라이브러리를 추가해 보도록 하자.
rebar.config 수정 이전 포스트를 참고해서 기본 작업(sub_dirs 추가 등)은 완료했다고 가정한다.
 {deps, [ {&#39;lager&#39;, &amp;quot;.*&amp;quot;, {git, &amp;quot;https://github.com/basho/lager&amp;quot;, &amp;quot;&amp;quot;}}, {protobuffs, &amp;quot;.*&amp;quot;, {git, &amp;quot;git://github.com/basho/erlang_protobuffs.git&amp;quot;, {branch, &amp;quot;master&amp;quot;}}} ]}.   deps에 protobuffs, &amp;#8230; 행을 복사해 넣는다.  xxx.proto 파일 생성 프로토콜을 정의한 *.proto파일을 생성한다.
예를 들면 다음과 같은 simple.proto파일을 src 디렉토리 밑에 추가한다.
 package simple; message Person { required string name = 1; required string address = 2; required string phone_number = 3; required int32 age = 4; optional Location location = 5; } message Location { required string region = 1; required string country = 2; }  make로 컴파일하고 나면 rebar가 .</description>
    </item>
    
  </channel>
</rss>