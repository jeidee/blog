<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Daemon on Erlang &amp; Go</title>
    <link>https://jeidee.github.io/tags/daemon/</link>
    <description>Recent content in Daemon on Erlang &amp; Go</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Wed, 15 Apr 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jeidee.github.io/tags/daemon/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>c&#43;&#43; 리눅스 데몬 프로세스 만들기</title>
      <link>https://jeidee.github.io/2015/04/15/c-eba6aceb8885ec8aa4-eb8db0ebaaac-ed9484eba19cec84b8ec8aa4-eba78ceb93a4eab8b0/</link>
      <pubDate>Wed, 15 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://jeidee.github.io/2015/04/15/c-eba6aceb8885ec8aa4-eb8db0ebaaac-ed9484eba19cec84b8ec8aa4-eba78ceb93a4eab8b0/</guid>
      <description>c/c++ 로 구현한 어플리케이션을 데몬 프로세스로 만들기 위해 다음과 같은 과정을 거쳐 추가 코드를 작성한다.
1) fork()를 사용해 자식프로세스를 생성 후 부모 프로세스를 종료
2) 터미널 종료시 SIGHUP 시그널 무시
3) (선택) 루트 디렉토리로 경로 변경
4) setsid()로 새로운 세션 생성
5) while(true) 루프 생성
#include &amp;lt;sys/types.h&amp;gt; #include &amp;lt;sys/stat.h&amp;gt; #include &amp;lt;stdio.h&amp;gt; #include &amp;lt;fcntl.h&amp;gt; #include &amp;lt;signal.h&amp;gt; #include &amp;lt;stdlib.h&amp;gt; int main() { pid_t pid; // fork 에러 if (( pid = fork()) &amp;lt; 0) exit(0); // 정상 : 부모프로세스를 종료한다.</description>
    </item>
    
  </channel>
</rss>