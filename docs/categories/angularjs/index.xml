<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Angularjs on Erlang &amp; Go</title>
    <link>http://jeidee.github.io/categories/angularjs/</link>
    <description>Recent content in Angularjs on Erlang &amp; Go</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Feb 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://jeidee.github.io/categories/angularjs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>cowboy에서 SSE를 사용한 웹서버 push 구현하기</title>
      <link>http://jeidee.github.io/2016/02/15/cowboyec9790ec849c-sseeba5bc-ec82acec9aa9ed959c-ec9bb9ec849cebb284-push-eab5aced9884ed9598eab8b0/</link>
      <pubDate>Mon, 15 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>http://jeidee.github.io/2016/02/15/cowboyec9790ec849c-sseeba5bc-ec82acec9aa9ed959c-ec9bb9ec849cebb284-push-eab5aced9884ed9598eab8b0/</guid>
      <description>ejabberd에 cowboy를 연동했다고 가정한다.
Front-end는 AngularJS를 사용한다.
 SSE(Server Sent Event)참고  클라이언트에서 다음과 같이 EventSource객체를 생성한 후 서버 이벤트를 위한 이벤트리스닝을 시작한다.
https://gist.github.com/jeidee/a135060aef54b48bae1d
서버에서는 다음과 같이 cowboy_req:chunked_reply/3 함수를 사용해 content-type이 text/event-stream인 응답을 보내고 {cowboy_loop, _, _}를 반환한다.
일반적으로 하나의 클라이언트 요청(http request)당 하나의 erlang process를 생성하며, cowboy_req:reply/4 함수를 사용해 reponse를 보내고 {ok, _, _}를 반환하면 해당 erlang process를 종료한다.
하지만 Server Sent Event를 위해 {cowboy_loop, _, _}를 반환하면 해당 클라이언트의 요청(Request) 객체를 erlang process에 상태로 유지하며,</description>
    </item>
    
    <item>
      <title>Angular JS와 ui-router를 사용해서 인증이 필요한 웹사이트 뼈대 만들기</title>
      <link>http://jeidee.github.io/2016/02/03/angular-jsec9980-ui-routereba5bc-ec82acec9aa9ed95b4ec849c-ec9db8eca69dec9db4-ed9584ec9a94ed959c-ec9bb9ec82acec9db4ed8ab8-ebbc88eb8c80-eba78c/</link>
      <pubDate>Wed, 03 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>http://jeidee.github.io/2016/02/03/angular-jsec9980-ui-routereba5bc-ec82acec9aa9ed95b4ec849c-ec9db8eca69dec9db4-ed9584ec9a94ed959c-ec9bb9ec82acec9db4ed8ab8-ebbc88eb8c80-eba78c/</guid>
      <description>백엔드 서버는 cowboy를 사용하고, 프론트엔드는 Angular JS를 사용해서 웹사이트를 구성해 보자.
준비  AngularJS는 1.4.9 버전을 기준으로 한다.  디렉토리 구성 디렉토리는 다음과 같이 구성한다.
 &amp;amp;#8211; root ㄴ myapp |- assets | |- css | |- img | ㄴ js |- src | |- app | | |- models | | |- services | | ㄴ app.js | |- auth | | |- controllers | | |- tmpl | | ㄴ Auth.</description>
    </item>
    
  </channel>
</rss>