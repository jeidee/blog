<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Image on Erlang &amp; Go</title>
    <link>https://jeidee.github.io/blog/tags/image/</link>
    <description>Recent content in Image on Erlang &amp; Go</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 May 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jeidee.github.io/blog/tags/image/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ios 비동기로 이미지 다운로드</title>
      <link>https://jeidee.github.io/blog/2015/05/19/ios-ebb984eb8f99eab8b0eba19c-ec9db4ebafb8eca780-eb8ba4ec9ab4eba19ceb939c/</link>
      <pubDate>Tue, 19 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://jeidee.github.io/blog/2015/05/19/ios-ebb984eb8f99eab8b0eba19c-ec9db4ebafb8eca780-eb8ba4ec9ab4eba19ceb939c/</guid>
      <description> 이미지캐시 클래스를 만들고 있는 과정인데 우선 비동기로 이미지를 다운로드 하는 코드를 작성해 보았다.
아직 캐시 기능은 구현하지 않았다.
ImageCache.h
#import &amp;lt;UIKit/UIKit.h&amp;gt; @interface ImageCache : NSObject +(ImageCache*)getInstance; -(void) loadFromUrl: (NSURL\*) url callback:(void (^)(UIImage \*image))callback; @end  ImageCache.m
#import &amp;lt;UIKit/UIKit.h&amp;gt; @interface ImageCache : NSObject +(ImageCache*)getInstance; -(void) loadFromUrl: (NSURL\*) url callback:(void (^)(UIImage \*image))callback; @end  사용
[[ImageCache getInstance] loadFromUrl:roster.photo callback:^(UIImage *image) { cell.imgAvatar.image = image; }];  참고  Loading an image into UIImage asynchronously iphone에서 메모리 문제로 URL로 데이터를 가끔씩 못 가져올 때 Disk Caching with AFNetworking UIImageView에 원격이미지 비동기 로드 및 캐쉬 기능 넣기  </description>
    </item>
    
    <item>
      <title>android url에서 이미지를 비동기로 다운로드 받아 ImageView에 출력하기</title>
      <link>https://jeidee.github.io/blog/2015/04/27/android-urlec9790ec849c-ec9db4ebafb8eca780eba5bc-ebb984eb8f99eab8b0eba19c-eb8ba4ec9ab4eba19ceb939c-ebb09bec9584-imageviewec9790-ecb69ceba0a5/</link>
      <pubDate>Mon, 27 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://jeidee.github.io/blog/2015/04/27/android-urlec9790ec849c-ec9db4ebafb8eca780eba5bc-ebb984eb8f99eab8b0eba19c-eb8ba4ec9ab4eba19ceb939c-ebb09bec9584-imageviewec9790-ecb69ceba0a5/</guid>
      <description>Custome List Adapter의 getView() 함수 안에서 다음과 같이 사용한다.
new DownloadImageTask(pView.GetIconView()).execute(roster.vcard().photo());  private class DownloadImageTask extends AsyncTask&amp;lt;String, Void, Bitmap&amp;gt; { ImageView bmImage; public DownloadImageTask(ImageView bmImage) { this.bmImage = bmImage; } protected Bitmap doInBackground(String&amp;amp;#8230; urls) { String urldisplay = urls[0]; Bitmap mIcon11 = null; try { InputStream in = new java.net.URL(urldisplay).openStream(); mIcon11 = BitmapFactory.decodeStream(in); } catch (Exception e) { Log.e(&amp;quot;Error&amp;quot;, e.getMessage()); e.printStackTrace(); } return mIcon11; } protected void onPostExecute(Bitmap result) { bmImage.</description>
    </item>
    
  </channel>
</rss>