<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Component on Erlang &amp; Go</title>
    <link>http://jeidee.github.io/blog/tags/component/</link>
    <description>Recent content in Component on Erlang &amp; Go</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 04 Mar 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://jeidee.github.io/blog/tags/component/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ejabberd external component 연동</title>
      <link>http://jeidee.github.io/blog/2015/03/04/ejabberd-external-component-ec97b0eb8f99/</link>
      <pubDate>Wed, 04 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://jeidee.github.io/blog/2015/03/04/ejabberd-external-component-ec97b0eb8f99/</guid>
      <description>xmpp component 개요 xmpp에는 external component 관련 공식 프로토콜인 Jabber Component Protocol이 있다.
Jabber Component Protocol은 외부 컴포넌트를 XMPP서버와 연동하기 위한 규약을 제안하는데 크게 accept와 connect에 대한 XML 스키마와 handshake flow를 명세하고 있다.
xmpp의 external component는 프로토콜만 준수한다면 어떤 언어를 사용해서도 구현할 수 있다. 3rd-party 컴포넌트를 ejabberd와 연동하는 방법은 Install Components and Transports to othe networks 문서를 참고하도록 한다.
echo-bot component 만들어서 연동해 보기 node-xmpp-component 모듈을 사용해서 간단한 에코봇을 컴포넌트로 만들어 ejabberd와 연동해 보도록 하자.</description>
    </item>
    
  </channel>
</rss>